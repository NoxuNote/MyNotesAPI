openapi: 3.0.3
info:
  title: MyNotes NoxuNote API
  version: '1.0'
  contact:
    name: Léo Rolland
    url: 'https://noxunote.fr/leorolland'
    email: rolland.leo@orange.fr
  license:
    name: gpl-3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.txt'
  x-logo:
    url: 'https://noxunote.fr/prototype/assets/img/site-header-logo.png'
servers:
  - url: 'https://cloud.noxunote.fr/mynotes'
paths:
  /health:
    get:
      summary: Control ready state of the application
      responses:
        '200':
          description: 'health check report'
        '503':
          description: 'unhealthy service'
      operationId: healthCheck
  /notes:
    summary: All your note metadata
    get:
      
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMetadatas'
          description: success
          x-last-modified: 1595062837872
        '404':
          description: Note doesn't exist        
          x-last-modified: 1596849342543
      operationId: getAllNoteMetadata
      summary: Get all your notes metadata
      x-swagger-router-controller: Default
    post:
      
      responses:
        '200':
          description: Success
          x-last-modified: 1595062709994
      operationId: createNewNote
      summary: Creates a new empty note
      x-swagger-router-controller: Default
    x-last-modified: 1594740636921
  '/notes/{note_uuid}':
    summary: Id based note metadata
    get:
      
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMetadata'
          description: success
          x-last-modified: 1595062886178
        '404':
          description: note doesn't exist on your account
          x-last-modified: 1595063627287
      operationId: getNoteMetadataById
      summary: Get an already existing note metadata
      x-swagger-router-controller: Default
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteMetadata'
        required: true
      
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          description: success
          x-last-modified: 1595063497643
        '404':
          description: note doesn't exist on your account
          x-last-modified: 1595063683236
        '401':
          description: could not save new metadata
          x-last-modified: 1595063683236
      operationId: updateNoteMetadataById
      summary: Update already existing note
      x-swagger-router-controller: Default
    delete:
      
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          description: ok
          x-last-modified: 1595063538114
        '404':
          description: note doesn't exist on your account
          x-last-modified: 1595063697589
      operationId: deleteNoteById
      summary: Delete an already existing note
      x-swagger-router-controller: Default
    x-last-modified: 1594740651194
  '/notes/{note_uuid}/content':
    summary: Id based note content
    get:
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          content:
            application/json: {}
          description: success
          x-last-modified: 1595063978471
        '404':
          description: note doesn't exist on your account
          x-last-modified: 1595063971815
      operationId: getNoteContentById
      summary: Get raw content of a note
      x-swagger-router-controller: Default
    put:
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          description: success
          x-last-modified: 1595064125864
        '404':
          description: note doesn't exist on your account
          x-last-modified: 1595064132911
      operationId: updateNoteContentById
      summary: Update an already existing note content
      x-swagger-router-controller: Default
    x-last-modified: 1594740661418
  /shared_notes/:
    summary: Other's note shared with me
    get:
      
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMetadatas'
          description: success
          x-last-modified: 1595064244239
      operationId: getAllSharedNoteMetadata
      summary: Get all notes other users shared with you
      x-swagger-router-controller: Default
    x-last-modified: 1594740963115
  '/shared_notes/{note_uuid}':
    summary: Other's note shared with me
    get:
      
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMetadata'
          description: success
          x-last-modified: 1595064968772
        '404':
          description: no note shared with you exists with this uuid
          x-last-modified: 1595064741564
      operationId: getSharedNoteMetadataById
      summary: Get an already existing and shared with you note metadata
      x-swagger-router-controller: Default
    x-last-modified: 1594741002087
  '/shared_notes/{note_uuid}/content':
    summary: Other's note shared with me
    get:
      
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          content:
            application/json: {}
          description: success
          x-last-modified: 1595065086026
        '404':
          description: no note shared with you exists with this uuid
          x-last-modified: 1595065117494
      operationId: getSharedNoteContentById
      summary: Get an already existing and shared with you note content
      x-swagger-router-controller: Default
    put:
      parameters:
        - $ref: '#/components/parameters/note_uuid'
      responses:
        '200':
          description: success
          x-last-modified: 1595065156208
        '403':
          description: You don't have write permission on this note
          x-last-modified: 1595065179849
        '404':
          description: no existing note shared with you with this uuid
          x-last-modified: 1595065196402
      operationId: updateSharedNoteContentById
      summary: Update an already existing and shared with you note content
      x-swagger-router-controller: Default
    x-last-modified: 1594741230002
  /account:
    summary: Other's note shared with me
    post:
      requestBody:
        x-name: account
        description: Provide informations about the account you are creating
        content:
          application/json:
            schema:
              description: Provide informations about the account you are creating
              required:
                - email
              type: object
              example:
                email: me@example.com
              properties:
                email:
                  type: string
                  pattern: '(?:[a-z0-9!#$%&''*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&''*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])'
            example:
              email: me@example.com
        required: true
      responses:
        '200':
          content:
            application/json:
              example: |-
                {
                  "accountUuid": "d18dc42a-f6ab-42fb-8575-aa267fc81c29",
                  "email": "me@example.com",
                  "updatedAt": "2020-08-08T01:23:07.224Z",
                  "createdAt": "2020-08-08T01:23:07.224Z",
                  "nickname": null
                }
          description: |-
            OK: account created

            returns an object containing informations about created account such as email
          x-last-modified: 1596850009579
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Request body do not match pattern
          x-last-modified: 1596850777333
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: User already exists
          description: 'Could not create account, email probably already exist'
          x-last-modified: 1596850755416
      operationId: createAccount
      summary: Create an account with body parameters
      
      x-swagger-router-controller: Default
    x-last-modified: 1596663175324
components:
  schemas:
    NoteMetadata:
      description: Métadonnées associées à une note
      type: object
      properties:
        uuid:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
        title:
          type: string
        description:
          type: string
          nullable: true
        author:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
          nullable: true
        lastEdit:
          type: string
          format: date-time
          nullable: true
        version:
          type: integer
        data:
          type: object
      x-last-modified: 1595062311235
    NoteMetadatas:
      type: array
      items:
        $ref: '#/components/schemas/NoteMetadata'
    Error:
      description: A caught error
      type: object
      properties:
        message:
          type: string
      example: ''
      x-last-modified: 1596849198604
  parameters:
    note_uuid:
      deprecated: false
      style: simple
      explode: false
      example: ''
      name: note_uuid
      description: UUID of note to return
      schema:
        pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'
        type: string
      in: path
      required: true
      x-last-modified: 1595064519010
  requestBodies: {}
  securitySchemes: {}
  responses: {}
externalDocs:
  description: External description
  url: 'https://api.noxunote.fr/docs/mynotes'

security: []

